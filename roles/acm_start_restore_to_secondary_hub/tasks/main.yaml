- name: Shutdown primary HUB ACM
  block:
  - name: Add node selector to open-cluster-management namespace
    kubernetes.core.k8s:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Namespace
      state: present
      name: open-cluster-management
      definition: |
        metadata:
          annotations:
             openshift.io/node-selector: "disable_acm_adding_not_valid_node_selector=true"
  
  - name: "Fetch all pods in the namespace open-cluster-management"
    k8s_info:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Pod
      namespace: "open-cluster-management"
    register: pod_list
  
  - set_fact: 
      pod_name_list: "{{pod_list.resources | map(attribute='metadata') | map(attribute='name') }}"
  
  - name: Delete pod of the namespace open-cluster-management
    k8s:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Pod
      name: "{{item}}"
      namespace: "open-cluster-management"
      state: absent
    loop: "{{ pod_name_list }}"


  - name: Add node selector to open-cluster-management-backup namespace
    kubernetes.core.k8s:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Namespace
      state: present
      name: open-cluster-management-backup
      definition: |
        metadata:
          annotations:
             openshift.io/node-selector: "disable_acm_adding_not_valid_node_selector=true"
  
  - name: "Fetch all pods in the namespace open-cluster-management"
    k8s_info:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Pod
      namespace: "open-cluster-management-backup"
    register: pod_list
  
  - set_fact: 
      pod_name_list: "{{pod_list.resources | map(attribute='metadata') | map(attribute='name') }}"
  
  - name: Delete pod of the namespace open-cluster-management-backup
    k8s:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Pod
      name: "{{item}}"
      namespace: "open-cluster-management-backup"
      state: absent
    loop: "{{ pod_name_list }}"

  - name: Add node selector to open-cluster-management-hub namespace
    kubernetes.core.k8s:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Namespace
      state: present
      name: open-cluster-management-hub
      definition: |
        metadata:
          annotations:
             openshift.io/node-selector: "disable_acm_adding_not_valid_node_selector=true"
  
  - name: "Fetch all pods in the namespace open-cluster-hub"
    k8s_info:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Pod
      namespace: "open-cluster-management-hub"
    register: pod_list
  
  - set_fact: 
      pod_name_list: "{{pod_list.resources | map(attribute='metadata') | map(attribute='name') }}"
  
  - name: Delete pod of the namespace open-cluster-management-hub
    k8s:
      host: "{{primary_hub_ocp_host}}"
      api_key: "{{primary_hub_ocp_api_key}}"
      validate_certs: "{{primary_hub_ocp_validate_certs}}"
      kind: Pod
      name: "{{item}}"
      namespace: "open-cluster-management-hub"
      state: absent
    loop: "{{ pod_name_list }}"

  
- name: create ACM Restore resource
  kubernetes.core.k8s:
    host: "{{secondary_hub_ocp_host}}"
    api_key: "{{secondary_hub_ocp_api_key}}"
    validate_certs: "{{secondary_hub_ocp_validate_certs}}"
    state: present
    template: templates/08_Restore_restore-acm.yaml
  retries: 100
  delay: 5
  register: result
  until: result is success


- name: create ACM BackupSchedule resource
  kubernetes.core.k8s:
    host: "{{secondary_hub_ocp_host}}"
    api_key: "{{secondary_hub_ocp_api_key}}"
    validate_certs: "{{secondary_hub_ocp_validate_certs}}"
    state: present
    template: templates/07_BackupSchedule_schedule-acm.yaml
  retries: 100
  delay: 5
  register: result
  until: result is success

- name: Wait BackupSchedule is configured
  kubernetes.core.k8s:
    host: "{{secondary_hub_ocp_host}}"
    api_key: "{{secondary_hub_ocp_api_key}}"
    validate_certs: "{{secondary_hub_ocp_validate_certs}}"
    definition:
      apiVersion: cluster.open-cluster-management.io/v1beta1
      kind: BackupSchedule
      metadata:
        name: schedule-acm
        namespace: open-cluster-management-backup
    wait: yes
    wait_condition:
      status: True 
        

- name: Wait that at least 5 Backup resource are created in open-cluster-management-backup namespace
  kubernetes.core.k8s_info:
    host: "{{secondary_hub_ocp_host}}"
    api_key: "{{secondary_hub_ocp_api_key}}"
    validate_certs: "{{secondary_hub_ocp_validate_certs}}"
    api_version: v1
    kind: Backup
    namespace: open-cluster-management-backup
  retries: 100
  delay: 5
  register: backup_resources_list
  until: backup_resources_list.resources | length >= 5

- name: Pause for 10 minutes to wait that the first backup is completed before to continue
  ansible.builtin.pause:
    minutes: 10








