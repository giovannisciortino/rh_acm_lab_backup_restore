- name: Verify that the cluster API of active HUB are reachable and the credential are correct
  kubernetes.core.k8s_cluster_info:
    host: "{{active_hub_ocp_host}}"
    api_key: "{{active_hub_ocp_api_key}}"
    validate_certs: "{{active_hub_ocp_validate_certs}}"
  register: api_status

- name: Verify that the cluster API of passive HUB are reachable and the credential are correct
  kubernetes.core.k8s_cluster_info:
    host: "{{passive_hub_ocp_host}}"
    api_key: "{{passive_hub_ocp_api_key}}"
    validate_certs: "{{passive_hub_ocp_validate_certs}}"
  register: api_status

- name: Create and add node-selector to ACM MultiClusterObservability Namespace with the correct node selector if not exists
  kubernetes.core.k8s:
    host: "{{active_hub_ocp_host}}"
    api_key: "{{active_hub_ocp_api_key}}"
    validate_certs: "{{active_hub_ocp_validate_certs}}"
    state: present
    template: templates/Namespace_open-cluster-management-observability.yaml

- name: Execute workaround before performing the restore
  block:
    - name: Pause MCE on ACM HUB becoming passive
      ansible.builtin.include_tasks: pause_mce.yaml

    - name: Stop the import-controller pods modifing the replicas value of the deployment on ACM HUB becoming passive
      kubernetes.core.k8s:
        host: "{{passive_hub_ocp_host}}"
        api_key: "{{passive_hub_ocp_api_key}}"
        validate_certs: "{{passive_hub_ocp_validate_certs}}"
        kind: Deployment
        namespace: "multicluster-engine"
        name: "managedcluster-import-controller-v2"
        state: present
        definition: |
          spec:
            replicas: 0


#- name: Wait that there are 3 restic pod in open-cluster-management-backup namespace
#  kubernetes.core.k8s_info:
#    host: "{{active_hub_ocp_host}}"
#    api_key: "{{active_hub_ocp_api_key}}"
#    validate_certs: "{{active_hub_ocp_validate_certs}}"
#    api_version: v1
#    kind: Pod
#    namespace: open-cluster-management-backup
#  retries: 100
#  delay: 5
#  register: pod_open_cluster_management_backup_list
#  until: pod_open_cluster_management_backup_list.resources | map(attribute='metadata') | map(attribute='name') | select('match','^restic.*') | length >= 3
#
#- name: "Define restic Pod name list in the namespace open-cluster-management-backup"
#  set_fact: 
#    pod_restic_name_list: "{{pod_open_cluster_management_backup_list.resources | map(attribute='metadata') | map(attribute='name') | select('match','^restic.*') }}"
#
#- name: Wait that all restic pods in the namespace open-cluster-management-backup are in the state running
#  k8s_info:
#    host: "{{active_hub_ocp_host}}"
#    api_key: "{{active_hub_ocp_api_key}}"
#    validate_certs: "{{active_hub_ocp_validate_certs}}"
#    api_version: v1
#    kind: Pod
#    namespace: open-cluster-management-backup
#    name: "{{item}}"
#  loop: "{{pod_restic_name_list}}"
#  register: pod_restic_status
#  until: pod_restic_status.resources | map(attribute='status',default=[])| map(attribute='phase',default=[])| unique | length == 1 and pod_restic_status.resources | map(attribute='status',default=[])| map(attribute='phase',default=[])| unique | first == 'Running'
#  retries: 20
#  delay: 30

- name: create ACM Restore resource
  kubernetes.core.k8s:
    host: "{{active_hub_ocp_host}}"
    api_key: "{{active_hub_ocp_api_key}}"
    validate_certs: "{{active_hub_ocp_validate_certs}}"
    state: present
    template: templates/08_Restore_restore-acm.yaml
  retries: 100
  delay: 5
  register: result
  until: result is success

#- name: Import a managed cluster on primary RH ACM Hub ( uncomment only on lab environment)
#  include_role:
#    name: acm_import_managedcluster
#  vars:
#    hub_host: "{{active_hub_ocp_host}}"
#    hub_api_key: "{{active_hub_ocp_api_key}}"
#    hub_validate_certs: "{{active_hub_ocp_validate_certs}}"
#    managed_cluster_host: "{{managed_cluster_ocp_host}}"
#    managed_cluster_api_key: "{{managed_cluster_ocp_api_key}}"
#    managed_cluster_validate_certs: "{{managed_cluster_ocp_validate_certs}}"
#    managed_cluster_name: "{{managed_cluster_name}}"
#  when: import_test_managed_cluster is defined and import_test_managed_cluster

- name: Execute workaround after performing the restore
  block:
  - name: Remove auto-import secrets from ACM HUB becoming passive
    include_tasks: remove_auto-import_secrets.yaml
 
  - name: Unpause MCE on ACM HUB becoming passive
    ansible.builtin.include_tasks: unpause_mce.yaml

- name: Manual task 1
  debug: 
    msg: "Check the Restore resource on open-cluster-management-backup and velero pod logs (An error on restore-acm-acm-resources-generic-schedule restore is expected if it is empty)"
#- name: Manual task 2
#  debug: 
#    msg: "Import the managed clusters"
- name: Manual task 3
  debug: 
    msg: "Redeploy grafana-dev . 1) git clone -b release-2.8 https://github.com/stolostron/multicluster-observability-operator.git 2) cd multicluster-observability-operator/tools/ 3) ./setup-grafana-dev.sh --deploy "
