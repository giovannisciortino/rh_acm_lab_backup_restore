- name: Verify that the cluster API are reachable and the credential are correct
  kubernetes.core.k8s_cluster_info:
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
  register: api_status

- name: Remove Restore resource from namespace open-cluster-management-backup
  kubernetes.core.k8s:
    state: absent
    api: v1beta1
    kind: Restore
    namespace: open-cluster-management-backup
    name: restore-acm
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
  retries: 100
  delay: 5
  register: result
  until: result is success

- name: create GCP S3 bucket cloud credential secret
  kubernetes.core.k8s:
    state: present
    definition: 
      apiVersion: v1
      kind: Secret
      type: Opaque             
      metadata:
        name: "cloud-credentials"
        namespace: open-cluster-management-backup
      data:
         cloud: "{{ acm_velero_service_account_credential | b64encode }}"
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
  retries: 100
  delay: 5
  register: result
  until: result is success

- name: Enable the Managed Service Account component
  kubernetes.core.k8s:
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
    definition:
      apiVersion: multicluster.openshift.io/v1
      kind: MultiClusterEngine
      metadata:
        name: multiclusterengine
      spec:
        overrides:
          components:
          - enabled: true
            name: managedserviceaccount-preview
    apply: yes



- name: create ACM DataProtectionApplication resource
  kubernetes.core.k8s:
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
    state: present
    template: templates/06_DataProtectionApplication_dpa-acm.yaml
  retries: 100
  delay: 5
  register: result
  until: result is success

- name: create ACM BackupSchedule resource
  kubernetes.core.k8s:
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
    state: present
    template: templates/07_BackupSchedule_schedule-acm.yaml
  retries: 100
  delay: 5
  register: result
  until: result is success

- name: Wait BackupSchedule is configured
  kubernetes.core.k8s:
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
    definition:
      apiVersion: cluster.open-cluster-management.io/v1beta1
      kind: BackupSchedule
      metadata:
        name: schedule-acm
        namespace: open-cluster-management-backup
    wait: yes
    wait_condition:
      status: True 
        

- name: Wait that at least 5 Backup resource are created in open-cluster-management-backup namespace
  kubernetes.core.k8s_info:
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
    api_version: v1
    kind: Backup
    namespace: open-cluster-management-backup
  retries: 100
  delay: 5
  register: backup_resources_list
  until: backup_resources_list.resources | length >= 5

- name: "Define list of the Backup resources in the namespace open-cluster-management-backup"
  set_fact: 
    backup_resources_name_list: "{{backup_resources_list.resources | map(attribute='metadata') | map(attribute='name') }}"

- debug: var=backup_resources_name_list

- name: Wait that all Backup resources on namespace open-cluster-management-backup have the field status.phase == "Completed"
  k8s_info:
    host: "{{host}}"
    api_key: "{{api_key}}"
    validate_certs: "{{validate_certs}}"
    api_version: v1
    kind: Backup
    namespace: open-cluster-management-backup
  register: backup_status
  until: backup_status.resources | map(attribute='status',default=[])| map(attribute='phase',default=[])| unique | length == 1 and backup_status.resources | map(attribute='status',default=[])| map(attribute='phase',default=[])| unique | first == "Completed"
  retries: "{{wait_first_backup_retries}}"
  delay: "{{wait_first_backup_delay}}"

